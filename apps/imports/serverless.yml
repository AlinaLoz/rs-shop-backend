service: ${env:SERVICE_NAME}-imports

useDotenv: true
plugins:
  - serverless-s3-local
  - serverless-offline-sqs
  - serverless-offline
  - serverless-plugin-optimize

provider:
  name: aws
  runtime: nodejs14.x
  region: ${env:AWS_REGION}
  lambdaHashingVersion: "20201221"
  stage: ${opt:stage, 'dev'}
  environment:
    NODE_ENV: ${env:NODE_ENV}
    S3_BUCKET_PRODUCTS: ${env:S3_BUCKET_PRODUCTS}
    S3_UPLOAD_DIR: ${env:S3_UPLOAD_DIR}
    S3_EXPIRES: ${env:S3_EXPIRES}
    AWS_S3_DIR_LOCAL: ${env:AWS_S3_DIR_LOCAL}
    SQS_URL_LOCAL: ${env:SQS_URL_LOCAL}
    SQS_QUEUE_NAME: ${env:SQS_QUEUE_NAME}
    SQS_URL:
      Ref: catalogItemsQueue
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "s3:ListBucket"
          Resource: "arn:aws:s3:::${env:S3_BUCKET_PRODUCTS}"
        - Effect: "Allow"
          Action: "s3:*"
          Resource: "arn:aws:s3:::${env:S3_BUCKET_PRODUCTS}/*"
        - Effect: "Allow"
          Action: "sqs:*"
          Resource:
            Fn::GetAtt: [ catalogItemsQueue, Arn ]

functions:
  importProductsFile:
    handler: dist/apps/imports/src/main.importProductsFile
    events:
      - http:
          method: get
          path: import
          request:
            parameters:
              querystrings:
                name: true
          cors: true
  uploadProductsFile:
    handler: dist/apps/imports/src/main.uploadProductsFile
    events:
      - s3:
          bucket: ${env:S3_BUCKET_PRODUCTS}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${env:S3_UPLOAD_DIR}
            - suffix: .csv
          existing: true

resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${env:SQS_QUEUE_NAME}

custom:
  s3BucketName: ${env:S3_BUCKET_PRODUCTS}
  s3:
    host: localhost
    directory: ${env:AWS_S3_DIR_LOCAL}
  serverless-offline-sqs:
    autoCreate: true
    apiVersion: '2012-11-05'
    endpoint: ${env:SQS_URL_LOCAL}
    region: ${env:AWS_REGION}
    accessKeyId: root
    secretAccessKey: root

